// Code generated by go-swagger; DO NOT EDIT.

package spare

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// NrSpareListHandlerFunc turns a function with the right signature into a spare list handler
type NrSpareListHandlerFunc func(NrSpareListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn NrSpareListHandlerFunc) Handle(params NrSpareListParams) middleware.Responder {
	return fn(params)
}

// NrSpareListHandler interface for that can handle valid spare list params
type NrSpareListHandler interface {
	Handle(NrSpareListParams) middleware.Responder
}

// NewNrSpareList creates a new http.Handler for the spare list operation
func NewNrSpareList(ctx *middleware.Context, handler NrSpareListHandler) *NrSpareList {
	return &NrSpareList{Context: ctx, Handler: handler}
}

/*NrSpareList swagger:route GET /spare/list Spare spareList

打赏列表

打赏列表

*/
type NrSpareList struct {
	Context *middleware.Context
	Handler NrSpareListHandler
}

func (o *NrSpareList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewNrSpareListParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
