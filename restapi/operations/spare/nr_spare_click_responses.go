// Code generated by go-swagger; DO NOT EDIT.

package spare

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "injapi/models"
)

// SpareClickOKCode is the HTTP code returned for type SpareClickOK
const SpareClickOKCode int = 200

/*SpareClickOK 详情

swagger:response spareClickOK
*/
type SpareClickOK struct {

	/*
	  In: Body
	*/
	Payload *models.InlineResponse2003 `json:"body,omitempty"`
}

// NewSpareClickOK creates SpareClickOK with default headers values
func NewSpareClickOK() *SpareClickOK {
	return &SpareClickOK{}
}

// WithPayload adds the payload to the spare click o k response
func (o *SpareClickOK) WithPayload(payload *models.InlineResponse2003) *SpareClickOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the spare click o k response
func (o *SpareClickOK) SetPayload(payload *models.InlineResponse2003) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SpareClickOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*NrSpareClickDefault error

swagger:response spareClickDefault
*/
type NrSpareClickDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewNrSpareClickDefault creates NrSpareClickDefault with default headers values
func NewNrSpareClickDefault(code int) *NrSpareClickDefault {
	if code <= 0 {
		code = 500
	}

	return &NrSpareClickDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the spare click default response
func (o *NrSpareClickDefault) WithStatusCode(code int) *NrSpareClickDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the spare click default response
func (o *NrSpareClickDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the spare click default response
func (o *NrSpareClickDefault) WithPayload(payload *models.Error) *NrSpareClickDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the spare click default response
func (o *NrSpareClickDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NrSpareClickDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
